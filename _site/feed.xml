<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description></description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 04 Oct 2024 11:00:59 +0900</pubDate>
    <lastBuildDate>Fri, 04 Oct 2024 11:00:59 +0900</lastBuildDate>
    <generator>Jekyll v3.10.0</generator>
    
      <item>
        <title>이펙티브 자바</title>
        <description>&lt;h2 id=&quot;목차별-정리&quot;&gt;목차별 정리&lt;/h2&gt; &lt;h3 id=&quot;5-generics-제네릭&quot;&gt;5. Generics (제네릭)&lt;/h3&gt; &lt;h4 id=&quot;item-26-원시-타입raw-types을-사용하지-마라&quot;&gt;Item 26: 원시 타입(raw types)을 사용하지 마라&lt;/h4&gt; &lt;p&gt;제네릭 타입이 도입된 이후로 원시 타입은 타입 안정성을 제공하지 않으므로 사용을 지양해야 합니다.&lt;/p&gt; &lt;h4 id=&quot;item-27-검증되지-않은-경고unchecked-warnings를-제거하라&quot;&gt;Item...</description>
        <pubDate>Mon, 30 Sep 2024 10:00:00 +0900</pubDate>
        <link>http://localhost:4000/books/2024/09/30/book-3.html</link>
        <guid isPermaLink="true">http://localhost:4000/books/2024/09/30/book-3.html</guid>
        
        <category>book</category>
        
        
        <category>books</category>
        
      </item>
    
      <item>
        <title>의존성 주입 이해하기</title>
        <description>&lt;h2 id=&quot;하드-코딩-방식-vs-의존성-주입-방식&quot;&gt;하드 코딩 방식 VS 의존성 주입 방식&lt;/h2&gt; &lt;h3 id=&quot;1-하드코딩-방식--클래스-수정-필요&quot;&gt;1. 하드코딩 방식 : 클래스 수정 필요&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;하드코딩된 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SpellChecker&lt;/code&gt;&lt;/strong&gt;는 특정 사전 객체를 직접 사용하고 있으며 사전을 변경할 때마다 &lt;code...</description>
        <pubDate>Mon, 30 Sep 2024 10:00:00 +0900</pubDate>
        <link>http://localhost:4000/post/2024/09/30/DI.html</link>
        <guid isPermaLink="true">http://localhost:4000/post/2024/09/30/DI.html</guid>
        
        <category>computer science</category>
        
        
        <category>post</category>
        
      </item>
    
      <item>
        <title>이펙티브 자바</title>
        <description>&lt;h2 id=&quot;목차별-정리&quot;&gt;목차별 정리&lt;/h2&gt; &lt;h3 id=&quot;1-introduction&quot;&gt;1. Introduction&lt;/h3&gt; &lt;p&gt;자바 프로그래밍 언어와 핵심 라이브러리의 효과적인 사용 방법을 소개하는 장이다. 각 항목은 자바의 모범 사례를 통해 성능, 가독성, 유지보수성을 높이기 위한 규칙을 다루고 있음.&lt;/p&gt;...</description>
        <pubDate>Fri, 27 Sep 2024 10:00:00 +0900</pubDate>
        <link>http://localhost:4000/books/2024/09/27/book-2.html</link>
        <guid isPermaLink="true">http://localhost:4000/books/2024/09/27/book-2.html</guid>
        
        <category>book</category>
        
        
        <category>books</category>
        
      </item>
    
      <item>
        <title>협업에 필요한 git 기능들 사용해보기</title>
        <description>&lt;h3 id=&quot;git-stash&quot;&gt;git stash&lt;/h3&gt;

</description>
        <pubDate>Mon, 23 Sep 2024 12:00:00 +0900</pubDate>
        <link>http://localhost:4000/post/2024/09/23/git-%E1%84%89%E1%85%A1%E1%84%8B%E1%85%AD%E1%86%BC.html</link>
        <guid isPermaLink="true">http://localhost:4000/post/2024/09/23/git-%E1%84%89%E1%85%A1%E1%84%8B%E1%85%AD%E1%86%BC.html</guid>
        
        <category>git</category>
        
        
        <category>post</category>
        
      </item>
    
      <item>
        <title>[sideproject 05] Swagger API 문서화 하기</title>
        <description>&lt;h3 id=&quot;swagger-ui-의존성-주입&quot;&gt;Swagger UI 의존성 주입&lt;/h3&gt; &lt;p&gt;build.gradle 파일에 의존성 추가하기&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'&lt;/code&gt;&lt;/p&gt; &lt;p&gt;의존성 추가 후 애플리케이션을 실행하면 아래 링크로 접속할 수 있다&lt;/p&gt; &lt;p&gt;localhost:8080/swagger-ui/index.html&lt;/p&gt; &lt;p&gt;그리고 저 url에 접속해보면 http://localhost:8080/login 로...</description>
        <pubDate>Thu, 19 Sep 2024 11:00:00 +0900</pubDate>
        <link>http://localhost:4000/post/2024/09/19/side-project-5.html</link>
        <guid isPermaLink="true">http://localhost:4000/post/2024/09/19/side-project-5.html</guid>
        
        <category>project</category>
        
        
        <category>post</category>
        
      </item>
    
      <item>
        <title>컴퓨터 밑바닥의 비밀</title>
        <description>&lt;h2 id=&quot;책리뷰&quot;&gt;책리뷰&lt;/h2&gt; &lt;blockquote&gt; &lt;p&gt;바퀴를 다시 발명하지 마라 (Don’t reinvent the wheel) 다른 사람이 작성한 훌륭한 프로그램이 있다면 직접 가져와서 사용하면 된다는 의미 &amp;gt; 하지만 어떻게 사용할건지에 대해서는 고민해야 함&lt;/p&gt; &lt;/blockquote&gt;...</description>
        <pubDate>Thu, 19 Sep 2024 10:00:00 +0900</pubDate>
        <link>http://localhost:4000/books/2024/09/19/book-1.html</link>
        <guid isPermaLink="true">http://localhost:4000/books/2024/09/19/book-1.html</guid>
        
        <category>book</category>
        
        
        <category>books</category>
        
      </item>
    
      <item>
        <title>[sideproject 04] 데이터 전달방식 json 형식으로 수정하기</title>
        <description>&lt;h3 id=&quot;controller-수정&quot;&gt;controller 수정&lt;/h3&gt;

&lt;p&gt;기존의 LocationVO 에서 받아오던 데이터를 Location 으로 수정함&lt;/p&gt;

&lt;p&gt;view를 jsp가 아니라 react로 만들기 때문에 데이터 전달방식을 json 형식으로 수정해야함&lt;/p&gt;
</description>
        <pubDate>Wed, 18 Sep 2024 11:00:00 +0900</pubDate>
        <link>http://localhost:4000/post/2024/09/18/side-project-4.html</link>
        <guid isPermaLink="true">http://localhost:4000/post/2024/09/18/side-project-4.html</guid>
        
        <category>project</category>
        
        
        <category>post</category>
        
      </item>
    
      <item>
        <title>[sideproject 03] mapper 에서 jpa로</title>
        <description>&lt;h3 id=&quot;entity-생성&quot;&gt;Entity 생성&lt;/h3&gt; &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import jakarta.persistence.Column; import jakarta.persistence.Entity; import jakarta.persistence.Id; import jakarta.persistence.Table; import lombok.AllArgsConstructor; import lombok.Builder; import lombok.Getter; import lombok.NoArgsConstructor; import lombok.Setter; @Getter @Setter @AllArgsConstructor @NoArgsConstructor @Builder...</description>
        <pubDate>Wed, 18 Sep 2024 10:00:00 +0900</pubDate>
        <link>http://localhost:4000/post/2024/09/18/side-project-3.html</link>
        <guid isPermaLink="true">http://localhost:4000/post/2024/09/18/side-project-3.html</guid>
        
        <category>project</category>
        
        
        <category>post</category>
        
      </item>
    
      <item>
        <title>[sideproject 02] 빌드 및 데이터 연결</title>
        <description>&lt;h3 id=&quot;spring-framework-에서-spring-boot-로-마이그레이션하기&quot;&gt;Spring Framework 에서 Spring Boot 로 마이그레이션하기&lt;/h3&gt; &lt;h4 id=&quot;새-프로젝트-만들기&quot;&gt;새 프로젝트 만들기&lt;/h4&gt; &lt;p&gt;IntelliJ &lt;br /&gt; File -&amp;gt; New Project -&amp;gt; Spring Boot&lt;/p&gt; &lt;p&gt;인텔리제이에서 위 순서대로 새로운 프로젝트를 선택 우측 하단에...</description>
        <pubDate>Mon, 16 Sep 2024 12:00:00 +0900</pubDate>
        <link>http://localhost:4000/post/2024/09/16/side-project-2.html</link>
        <guid isPermaLink="true">http://localhost:4000/post/2024/09/16/side-project-2.html</guid>
        
        <category>project</category>
        
        
        <category>post</category>
        
      </item>
    
      <item>
        <title>[sideproject 01] 사이드 프로젝트 시작하기</title>
        <description>&lt;h3 id=&quot;사이드-프로젝트의-필요성&quot;&gt;사이드 프로젝트의 필요성&lt;/h3&gt; &lt;p&gt;5개월간 Java 국비 수업을 들으면서 프로젝트를 2개 진행했지만, 개발의 전체적인 흐름을 이해하기 무리가 있었다.&lt;/p&gt; &lt;p&gt;첫 번째 프로젝트는 servlet 과 JSP 를 이용해서 localhost로 서버를 띄우고 개발을...</description>
        <pubDate>Fri, 06 Sep 2024 10:00:00 +0900</pubDate>
        <link>http://localhost:4000/post/2024/09/06/side-project-1.html</link>
        <guid isPermaLink="true">http://localhost:4000/post/2024/09/06/side-project-1.html</guid>
        
        <category>project</category>
        
        
        <category>post</category>
        
      </item>
    
  </channel>
</rss>
